{"version":3,"sources":["assets/i1.png","assets/i2.png","assets/i3.png","assets/01.jpeg","assets/04.jpeg","assets/02.jpeg","assets/03.jpeg","assets/05.jpeg","components/Code.jsx","components/Icons.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Code","Icons","React","createElement","className","src","icon1","icon2","icon3","App","Parallax","strength","ParticlesBg","type","bg","style","height","href","AwesomeButton","size","bgImage","image1","blur","min","max","image4","renderLayer","percentage","position","background","concat","left","top","borderRadius","transform","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.351aed6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/i1.cbe6fbbb.png\";","module.exports = __webpack_public_path__ + \"static/media/i2.e0f78e12.png\";","module.exports = __webpack_public_path__ + \"static/media/i3.11771b48.png\";","module.exports = __webpack_public_path__ + \"static/media/01.1cb7b6b8.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/04.2b883d4e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/02.499d0e27.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/03.91cab153.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/05.148af95f.jpeg\";","import Highlight, { defaultProps } from \"prism-react-renderer\";\r\nimport React from \"react\";\r\n\r\nconst defaultStyle = {\r\n  padding: \"8px 20px\"\r\n};\r\n\r\nconst exampleCode = `\r\nimport React, { Component } from 'react'\r\n\r\nimport ParticlesBg from 'particles-bg'\r\n\r\nclass Example extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <div>...</div>\r\n        <ParticlesBg type=\"circle\" bg={true} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n`;\r\n\r\nconst Code = () => (\r\n  <Highlight {...defaultProps} code={exampleCode} language=\"jsx\">\r\n    {({ className, style, tokens, getLineProps, getTokenProps }) => {\r\n      const fStyle = Object.assign(defaultStyle, style);\r\n\r\n      return (\r\n        <pre className={className} style={fStyle}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n      )\r\n    }}\r\n  </Highlight>\r\n);\r\n\r\nexport default Code;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\nimport icon1 from \"../assets/i1.png\";\r\nimport icon2 from \"../assets/i2.png\";\r\nimport icon3 from \"../assets/i3.png\";\r\n\r\nimport \"./Icon.css\";\r\n\r\n\r\nconst Icons = () => (\r\n  <div className=\"icons\">\r\n    <div className=\"icon-con\"  >\r\n    \t<img className=\"icon\" src={icon1}></img>\r\n    \t<div className=\"icon-title\">easy to use</div>\r\n    </div>\r\n     <div className=\"icon-con\"  >\r\n    \t<img className=\"icon\" src={icon2}></img>\r\n    \t<div className=\"icon-title\">Real-time Tracking</div>\r\n    </div>\r\n     <div className=\"icon-con\"  >\r\n    \t<img className=\"icon\" src={icon3}></img>\r\n    \t<div className=\"icon-title\">Data Insights</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Icons;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport ParticlesBg from \"particles-bg\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Code from \"./components/Code.jsx\";\r\nimport Icons from \"./components/Icons.jsx\";\r\n\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport \"./App.css\";\r\n\r\nimport image1 from \"./assets/01.jpeg\";\r\nimport image2 from \"./assets/02.jpeg\";\r\nimport image3 from \"./assets/03.jpeg\";\r\nimport image4 from \"./assets/04.jpeg\";\r\nimport image5 from \"./assets/05.jpeg\";\r\n\r\n\r\nconst App = () => (\r\n  <div className=\"main\">\r\n    <div className=\"container\">\r\n      <Parallax strength={500}>\r\n        <ParticlesBg type=\"polygon\" bg={true}/>\r\n        <div style={{ height: 500 }}>\r\n          <div className=\"boxs header\">\r\n            <h1 className=\"title\">Journey Tracker</h1>\r\n            <h4 className=\"introduction\">\r\n              Journey Tracker aims to enhance user experience by providing location tracking and data management functionalities, primarily helping users record and monitor their daily travel routes for better planning and analysis of their journeys.\r\n            </h4>\r\n            <div className=\"buttons\">\r\n              <a href=\"https://github.com/YikunLi9/Jouney-Tracker/tree/gh-pages\">\r\n                <AwesomeButton\r\n                  size=\"medium\"\r\n                  type=\"secondary\"\r\n                >\r\n                  homepage\r\n                </AwesomeButton> \r\n              </a> \r\n              <div className=\"space\"></div>\r\n              <a href=\"https://github.com/YikunLi9/Jouney-Tracker/tree/main\">\r\n                <AwesomeButton\r\n                  size=\"medium\"\r\n                  type=\"primary\"\r\n                >\r\n                  github\r\n                </AwesomeButton>\r\n              </a> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Parallax>\r\n\r\n      <Parallax bgImage={image1} blur={{ min: -1, max: 3 }}>\r\n        <div style={{ height: 600 }}>\r\n          <div className=\"boxs\">\r\n            <h1 className=\"underline\">Project Introduction</h1>\r\n            <div className=\"box-con\">\r\n              Sometimes on long journeys, it's easy to forget the places you've passed along the way, and during everyday city tours, you might not pay attention to the scenery around you. Therefore, Journey Tracker has been developed to record the routes we often forget and visualize them on a map, helping you recall every step of your travels.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Parallax>\r\n\r\n      <Parallax strength={-100}>\r\n        <div style={{ height: 500 }}>\r\n          <div className=\"boxs\">\r\n            <h1 className=\"blue underline\">Characteristic</h1>\r\n            <Icons />\r\n            <div className=\"box-con blue\">\r\n              Journey Tracker enhances travel efficiency with its real-time location tracking and historical data visualization capabilities. It also boosts users' control over their personal information through robust data management and export features. Additionally, its excellent user experience design and main interface offer a smooth and intuitive user experience.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Parallax>\r\n\r\n      <Parallax\r\n        bgImage={image4}\r\n        strength={200}\r\n        renderLayer={percentage => (\r\n          <div>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                background: `rgba(255, 125, 0, ${percentage * 1})`,\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n                borderRadius: \"50%\",\r\n                transform: \"translate(-50%,-50%)\",\r\n                width: percentage * 500,\r\n                height: percentage * 500\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      >\r\n        <div style={{ height: 500 }}>\r\n          <div className=\"boxs\">\r\n            <div className=\"bsize\">High efficiency, User friendly</div>\r\n          </div>\r\n        </div>\r\n      </Parallax>\r\n\r\n    </div>\r\n    <div className=\"footer\">Copyright Mr right. This code is open source.</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'normalize.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}